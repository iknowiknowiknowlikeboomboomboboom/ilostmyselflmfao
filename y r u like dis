if not game:IsLoaded() then game.Loaded:Wait() end

BlacklistedPlayers, WhitelistedPlayers, ModsTable, kroneTable, BLSV, WLSV, MDSV, KRONE = {}, {}, {}, {}, false, false, false, false
Settings = {ServerHops = 5, Loadstring = "https://nord.vip/KRONE/DB.json", Distance = 18, Globals = {"Executions", "List"}}
Blacklist, kroneUserids = {}, {4710732523, 354902977}

if (type(getgenv()[Settings["Globals"][1]]) == "number" and getgenv()[Settings["Globals"][1]] > 0) then getgenv()[Settings["Globals"][1]] = getgenv()[Settings["Globals"][1]] + 1; end if (not getgenv()[Settings["Globals"][2]]) then getgenv()[Settings["Globals"][1]] = 1; getgenv()[Settings["Globals"][2]] = game:GetService("HttpService"):JSONDecode(game:HttpGet(Settings["Loadstring"])) end if (type(getgenv()[Settings["Globals"][1]]) == "number" and getgenv()[Settings["Globals"][1]] >= tonumber(Settings["ServerHops"])) then getgenv()[Settings["Globals"][1]] = 1; getgenv()[Settings["Globals"][2]] = game:GetService("HttpService"):JSONDecode(game:HttpGet(Settings["Loadstring"])) end for _,v in pairs(getgenv()[Settings["Globals"][2]]) do table.insert(WhitelistedPlayers, v["RID"]) end

local function checkBlacklist(player) if table.find(Blacklist, player.UserId) then table.insert(BlacklistedPlayers, player) game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Blacklisted Player Detected: " .. player.DisplayName, "All") BLSV = true end end local function checkKrone(player) if table.find(kroneUserids, player.UserId) then table.insert(kroneTable, player) game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("krone | owner Detected: " .. player.DisplayName, "All") KRONE = true end end local function checkWhitelist(player) if table.find(WhitelistedPlayers, tostring(player.UserId)) then game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Whitelisted Player Detected: " .. player.DisplayName, "All") end WLSV = true end local function checkAllPlayers() for _, player in ipairs(game.Players:GetPlayers()) do if player ~= LocalPlayer then checkBlacklist(player) checkKrone(player) checkWhitelist(player) end end end

game.Players.PlayerAdded:Connect(function(player) if player ~= LocalPlayer then checkBlacklist(player) checkKrone(player) checkWhitelist(player) end end)
checkAllPlayers()


coroutine.wrap(function() while true do wait() if #BlacklistedPlayers > 0 then for _, player in ipairs(game.Players:GetPlayers()) do if player ~= LocalPlayer and not table.find(BlacklistedPlayers, player) then player:Destroy() if player.Character then player.Character:Destroy() wait(0.1) end end end end end end)() coroutine.wrap(function() while true do wait() if #WhitelistedPlayers > 0 then for _, player in ipairs(game.Players:GetPlayers()) do if player ~= LocalPlayer and table.find(WhitelistedPlayers, player) then player:Destroy() if player.Character then player.Character:Destroy() wait(0.1) end end end end end end)() coroutine.wrap(function() while true do wait() if #kroneTable > 0 then for _, player in ipairs(game.Players:GetPlayers()) do if player ~= LocalPlayer and table.find(kroneTable, player) then player:Destroy() if player.Character then player.Character:Destroy() wait(0.1) end end end end end end)()


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local rservice = game:GetService("RunService")


local CF = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

local function shhhlol(TargetPlayer)
    local Character = LocalPlayer.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid.RootPart
    
    local im = TargetPlayer.Character
    local so
    local sorry
    local please
    local stop
    local it
    
    if im:FindFirstChildOfClass("Humanoid") then
        so = im:FindFirstChildOfClass("Humanoid")
    end
    if so and so.RootPart then
        sorry = so.RootPart
    end
    if im:FindFirstChild("Head") then
        please = im.Head
    end
    if im:FindFirstChildOfClass("stop") then
        stop = im:FindFirstChildOfClass("stop")
    end
    if Accessoy and stop:FindFirstChild("it") then
        it = stop.it
    end
    
    if Character and Humanoid and RootPart then
        if please then
            workspace.CurrentCamera.CameraSubject = please
        elseif not please and it then
            workspace.CurrentCamera.CameraSubject = it
        else
            workspace.CurrentCamera.CameraSubject = so
        end
        if not im:FindFirstChildWhichIsA("BasePart") then
            return
        end
        local function mmmm(comkid,Pos,Ang)
            RootPart.CFrame = CFrame.new(comkid.Position) * Pos * Ang
            RootPart.RotVelocity = Vector3.new(9e8,9e8,9e8)
        end
        local function wtf(comkid)
            local TimeToWait = 0.1
            local Time = tick()
            local Angle = 0
            
            repeat
                if RootPart and so then
                    if comkid.Velocity.Magnitude < 30 then
                        mmmm(comkid,CFrame.new(0,1.5,0) + so.MoveDirection * comkid.Velocity.Magnitude / 5,CFrame.Angles(math.rad(0),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        mmmm(comkid,CFrame.new(0,1.5,0) + so.MoveDirection * comkid.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(0),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                        mmmm(comkid,CFrame.new(0,-1.5,0) + so.MoveDirection * comkid.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(0),0,0))
                        game:GetService("RunService").Heartbeat:wait()
                        
                    else
                        mmmm(comkid,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(0),0,0))
                        game:GetService("RunService").Heartbeat:wait()

                    end
                else
                    break
                end
            until comkid.Velocity.Magnitude > 1000 or comkid.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == im or Humanoid.Health <= 0 or tick() > Time + TimeToWait
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF
        end
        workspace.FallenPartsDestroyHeight = 0/0
        local BV = Instance.new("BodyVelocity")
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(-9e9,9e9,-9e9)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
        if sorry and please then
            if (sorry.CFrame.p - please.CFrame.p).Magnitude > 5 then
                wtf(please)
            else
                wtf(sorry)
            end
        elseif sorry and not please then
            wtf(sorry)
        elseif not sorry and please then
            wtf(please)
        elseif not sorry and not please and stop and it then
            wtf(it)
        else
        end
        BV:Destroy()
        for _,x in next, Character:GetDescendants() do
            if x:IsA("BasePart") then
                x.Velocity,x.RotVelocity = Vector3.new(),Vector3.new()
            end
        end
        Humanoid:ChangeState("GettingUp")
        workspace.CurrentCamera.CameraSubject = Humanoid
    end
end

rservice.Stepped:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit == true then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
        end
        for _,z in next, LocalPlayer.Character:GetChildren() do if z:IsA'BasePart' then z.CanCollide = false end end
    end
end)
coroutine.resume(coroutine.create(function()
    while wait() do
        pcall(function()
            for _,z in pairs(Players:GetPlayers()) do
                if z ~= LocalPlayer and not table.find(WhitelistedPlayers, tostring(z.UserId)) then
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") and z and z.Character and z.Character:FindFirstChildOfClass("Humanoid").Sit == false then
                        shhhlol(z)
                        wait()
                    end
                end
            end
        end)
    end
end))
coroutine.resume(coroutine.create(function()
    while wait() do
        for _,z in next, Players:GetPlayers() do
            if z~=LocalPlayer then
                for i=1,30 do
                game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(".gg/shhh || BOOST FOR WHITELIST || KRONEW || TANA IS A LOSER", "All")
                wait(2.15)
            end
        end
        end
end
end))
for i = 1, 160 do
    if #Players:GetPlayers() <= 4 then
        break
    end
    wait(.65)
end
local GUIDs = {}
local maxPlayers = 0
local Http =
    game:GetService("HttpService"):JSONDecode(
    game:HttpGet(
        "https://games.roblox.com/v1/games/" ..
            game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor="
    )
)
for i = 1, 100 do
    for i, v in next, Http.data do
        if v.playing ~= v.maxPlayers and v.id ~= game.JobId then
            maxPlayers = v.maxPlayers
            table.insert(GUIDs, {id = v.id, users = v.playing})
        end
    end
    if Http.nextPageCursor ~= null then
        Http =
            game:GetService("HttpService"):JSONDecode(
            game:HttpGet(
                "https://games.roblox.com/v1/games/"
                ..
                game.PlaceId
                ..
                "/servers/Public?sortOrder=Asc&limit=100&cursor="
                ..
                Http.nextPageCursor
            )
        )
    else
        break
    end
end
repeat wait() game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[math.random(1, 3)].id, LocalPlayer) until not LocalPlayer
